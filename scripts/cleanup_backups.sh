#!/bin/bash

# Script d·ªçn d·∫πp c√°c backup c≈©
# Usage: ./cleanup_backups.sh [options]
# Options:
#   --zip-older-than N: N√©n c√°c backup c≈© h∆°n N ng√†y
#   --delete-older-than N: X√≥a c√°c backup c≈© h∆°n N ng√†y
#   --stats: Hi·ªÉn th·ªã th·ªëng k√™ v·ªÅ backup
#   --help: Hi·ªÉn th·ªã tr·ª£ gi√∫p

WORKSPACE_ROOT=$(git rev-parse --show-toplevel 2>/dev/null || pwd)
BACKUP_DIR="$WORKSPACE_ROOT/_backups"
TODAY=$(date +%s)
ZIP_DAYS=7
DELETE_DAYS=90
SHOW_STATS=false

# Hi·ªÉn th·ªã tr·ª£ gi√∫p
show_help() {
  echo "C√¥ng c·ª• d·ªçn d·∫πp backup"
  echo "C√°ch s·ª≠ d·ª•ng: ./cleanup_backups.sh [options]"
  echo ""
  echo "Options:"
  echo "  --zip-older-than N: N√©n c√°c backup c≈© h∆°n N ng√†y (m·∫∑c ƒë·ªãnh: 7)"
  echo "  --delete-older-than N: X√≥a c√°c backup c≈© h∆°n N ng√†y (m·∫∑c ƒë·ªãnh: 90)"
  echo "  --stats: Hi·ªÉn th·ªã th·ªëng k√™ v·ªÅ backup"
  echo "  --help: Hi·ªÉn th·ªã tr·ª£ gi√∫p n√†y"
  echo ""
  echo "V√≠ d·ª•:"
  echo "  ./cleanup_backups.sh --stats"
  echo "  ./cleanup_backups.sh --zip-older-than 3 --delete-older-than 30"
  exit 0
}

# Ki·ªÉm tra th∆∞ m·ª•c backup t·ªìn t·∫°i
if [ ! -d "$BACKUP_DIR" ]; then
  echo "‚ùå Th∆∞ m·ª•c backup kh√¥ng t·ªìn t·∫°i: $BACKUP_DIR"
  exit 1
fi

# X·ª≠ l√Ω tham s·ªë ƒë·∫ßu v√†o
while [ "$#" -gt 0 ]; do
  case "$1" in
    --zip-older-than)
      ZIP_DAYS="$2"
      shift 2
      ;;
    --delete-older-than)
      DELETE_DAYS="$2"
      shift 2
      ;;
    --stats)
      SHOW_STATS=true
      shift
      ;;
    --help)
      show_help
      ;;
    *)
      echo "‚ùå Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c tham s·ªë: $1"
      show_help
      ;;
  esac
done

# Hi·ªÉn th·ªã th·ªëng k√™
if [ "$SHOW_STATS" = true ]; then
  echo "üìä Th·ªëng k√™ backup:"
  
  # S·ªë l∆∞·ª£ng th∆∞ m·ª•c backup
  BACKUP_COUNT=$(find "$BACKUP_DIR" -maxdepth 1 -type d -name "????-??-??" | wc -l)
  echo "- S·ªë l∆∞·ª£ng ng√†y backup: $BACKUP_COUNT"
  
  # T·ªïng dung l∆∞·ª£ng
  TOTAL_SIZE=$(du -sh "$BACKUP_DIR" | awk '{print $1}')
  echo "- T·ªïng dung l∆∞·ª£ng: $TOTAL_SIZE"
  
  # Backup m·ªõi nh·∫•t
  NEWEST_BACKUP=$(find "$BACKUP_DIR" -maxdepth 1 -type d -name "????-??-??" | sort | tail -n 1)
  if [ ! -z "$NEWEST_BACKUP" ]; then
    echo "- Backup m·ªõi nh·∫•t: $(basename "$NEWEST_BACKUP")"
  fi
  
  # Backup c≈© nh·∫•t
  OLDEST_BACKUP=$(find "$BACKUP_DIR" -maxdepth 1 -type d -name "????-??-??" | sort | head -n 1)
  if [ ! -z "$OLDEST_BACKUP" ]; then
    echo "- Backup c≈© nh·∫•t: $(basename "$OLDEST_BACKUP")"
  fi
  
  # S·ªë l∆∞·ª£ng file ƒë√£ backup
  FILE_COUNT=$(find "$BACKUP_DIR" -type f -not -path "*/\.*" -not -name "backup_log.md" | wc -l)
  echo "- T·ªïng s·ªë file ƒë√£ backup: $FILE_COUNT"
  
  echo ""
fi

# N√©n c√°c backup c≈©
if [ "$ZIP_DAYS" -gt 0 ]; then
  echo "üóúÔ∏è ƒêang n√©n c√°c backup c≈© h∆°n $ZIP_DAYS ng√†y..."
  
  find "$BACKUP_DIR" -maxdepth 1 -type d -name "????-??-??" | while read backup_dir; do
    # B·ªè qua n·∫øu ƒë√£ l√† file zip
    if [[ "$backup_dir" == *.zip ]]; then
      continue
    fi
    
    # T√≠nh tu·ªïi c·ªßa backup
    BACKUP_DATE=$(basename "$backup_dir")
    BACKUP_TIMESTAMP=$(date -j -f "%Y-%m-%d" "$BACKUP_DATE" "+%s" 2>/dev/null || date -d "$BACKUP_DATE" "+%s")
    DAYS_OLD=$(( ( $TODAY - $BACKUP_TIMESTAMP ) / 86400 ))
    
    if [ "$DAYS_OLD" -gt "$ZIP_DAYS" ]; then
      echo "üì¶ N√©n: $BACKUP_DATE (${DAYS_OLD} ng√†y)"
      
      # Ki·ªÉm tra n·∫øu file zip ƒë√£ t·ªìn t·∫°i
      if [ -f "${backup_dir}.zip" ]; then
        echo "  ‚ö†Ô∏è File zip ƒë√£ t·ªìn t·∫°i, b·ªè qua"
        continue
      fi
      
      # N√©n th∆∞ m·ª•c
      (cd "$BACKUP_DIR" && zip -rq "$(basename "$backup_dir").zip" "$(basename "$backup_dir")")
      
      if [ $? -eq 0 ]; then
        echo "  ‚úÖ N√©n th√†nh c√¥ng"
        # X√≥a th∆∞ m·ª•c g·ªëc sau khi n√©n
        rm -rf "$backup_dir"
      else
        echo "  ‚ùå N√©n th·∫•t b·∫°i"
      fi
    fi
  done
  
  echo "‚úÖ ƒê√£ ho√†n th√†nh n√©n backup"
  echo ""
fi

# X√≥a c√°c backup c≈©
if [ "$DELETE_DAYS" -gt 0 ]; then
  echo "üóëÔ∏è ƒêang x√≥a c√°c backup c≈© h∆°n $DELETE_DAYS ng√†y..."
  
  find "$BACKUP_DIR" -maxdepth 1 -type f -name "????-??-??.zip" | while read backup_zip; do
    # T√≠nh tu·ªïi c·ªßa backup
    BACKUP_DATE=$(basename "$backup_zip" .zip)
    BACKUP_TIMESTAMP=$(date -j -f "%Y-%m-%d" "$BACKUP_DATE" "+%s" 2>/dev/null || date -d "$BACKUP_DATE" "+%s")
    DAYS_OLD=$(( ( $TODAY - $BACKUP_TIMESTAMP ) / 86400 ))
    
    if [ "$DAYS_OLD" -gt "$DELETE_DAYS" ]; then
      echo "üóëÔ∏è X√≥a: $BACKUP_DATE (${DAYS_OLD} ng√†y)"
      
      # Ki·ªÉm tra trong log n·∫øu c√≥ ƒë√°nh d·∫•u l√† quan tr·ªçng
      if grep -q "IMPORTANT.*$BACKUP_DATE" "$BACKUP_DIR/backup_log.md" 2>/dev/null; then
        echo "  ‚ö†Ô∏è Backup ƒë∆∞·ª£c ƒë√°nh d·∫•u IMPORTANT, b·ªè qua"
        continue
      fi
      
      # X√≥a file zip
      rm -f "$backup_zip"
      
      if [ $? -eq 0 ]; then
        echo "  ‚úÖ X√≥a th√†nh c√¥ng"
      else
        echo "  ‚ùå X√≥a th·∫•t b·∫°i"
      fi
    fi
  done
  
  echo "‚úÖ ƒê√£ ho√†n th√†nh x√≥a backup"
fi

exit 0 